// Package bot —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏ –ª–æ–≥–∏–∫—É Telegram-–±–æ—Ç–∞.
package bot

import (
	"fmt"
	"log"
	"strconv"
	"strings"
	"time"

	"yougile_bot4/internal/models"

	"gopkg.in/telebot.v3"
)

// AdminAction –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
type AdminAction struct {
	Action    string // "promote" –∏–ª–∏ "demote"
	Stage     string // "waiting_input"
	StartTime time.Time
}

var (
	btnPromoteAdmin = telebot.Btn{
		Text:   "üëë –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
		Unique: "promote_admin_btn",
	}
	btnDemoteAdmin = telebot.Btn{
		Text:   "‚¨áÔ∏è –°–Ω—è—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
		Unique: "demote_admin_btn",
	}
)

// handleAdminActions –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏
func (b *Bot) handleAdminActions(c telebot.Context) error {
	sender, exists := b.storage.GetUser(c.Sender().ID)
	if !exists || sender.Role != models.RoleAdmin {
		return c.Send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
	}

	menu := &telebot.ReplyMarkup{ResizeKeyboard: true}
	menu.Reply(
		menu.Row(btnPromoteAdmin),
		menu.Row(btnDemoteAdmin),
		menu.Row(btnBack),
	)

	return c.Send("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", menu)
}

// handlePromoteAdminButton –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
func (b *Bot) handlePromoteAdminButton(c telebot.Context) error {
	sender, exists := b.storage.GetUser(c.Sender().ID)
	if !exists || sender.Role != models.RoleAdmin {
		return c.Send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
	}

	b.adminActions[c.Sender().ID] = &AdminAction{
		Action:    "promote",
		Stage:     "waiting_input",
		StartTime: time.Now(),
	}

	return c.Send("–í–≤–µ–¥–∏—Ç–µ @username –∏–ª–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º:")
}

// handleDemoteAdminButton –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ —Å–Ω—è—Ç–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
func (b *Bot) handleDemoteAdminButton(c telebot.Context) error {
	sender, exists := b.storage.GetUser(c.Sender().ID)
	if !exists || sender.Role != models.RoleAdmin {
		return c.Send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
	}

	b.adminActions[c.Sender().ID] = &AdminAction{
		Action:    "demote",
		Stage:     "waiting_input",
		StartTime: time.Now(),
	}

	return c.Send("–í–≤–µ–¥–∏—Ç–µ @username –∏–ª–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —Å–Ω—è—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:")
}

// handlePromoteAdmin –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –ø–æ–≤—ã—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
func (b *Bot) handlePromoteAdmin(c telebot.Context) error {
	sender, exists := b.storage.GetUser(c.Sender().ID)
	if !exists || sender.Role != models.RoleAdmin {
		return c.Send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
	}

	args := strings.Split(c.Message().Text, " ")
	if len(args) != 2 {
		return c.Send("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É —Ç–∞–∫: /promote_admin @username –∏–ª–∏ /promote_admin user_id")
	}

	var targetID int64
	if strings.HasPrefix(args[1], "@") {
		username := strings.TrimPrefix(args[1], "@")
		targetID = b.storage.GetUserIDByUsername(username)
		if targetID == 0 {
			return c.Send("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º username –Ω–µ –Ω–∞–π–¥–µ–Ω.")
		}
	} else {
		var err error
		targetID, err = strconv.ParseInt(args[1], 10, 64)
		if err != nil {
			return c.Send("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
		}
	}

	targetUser, exists := b.storage.GetUser(targetID)
	if !exists {
		return c.Send("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
	}

	if targetUser.Role == models.RoleAdmin {
		return c.Send(fmt.Sprintf("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s %s —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.",
			targetUser.FirstName, targetUser.LastName))
	}

	targetUser.Role = models.RoleAdmin
	b.storage.UpdateUser(targetUser)
	log.Printf("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %d –Ω–∞–∑–Ω–∞—á–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º", targetUser.TelegramID)

	if err := b.storage.SaveData(); err != nil {
		log.Printf("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: %v", err)
		return c.Send("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π.")
	}

	if _, err := b.bot.Send(&telebot.User{ID: targetID}, "–í–∞–º –±—ã–ª–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."); err != nil {
		log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é %d: %v", targetID, err)
	}

	return c.Send(fmt.Sprintf("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s %s –Ω–∞–∑–Ω–∞—á–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.",
		targetUser.FirstName, targetUser.LastName))
}

// handleDemoteAdmin –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É —Å–Ω—è—Ç–∏—è –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
func (b *Bot) handleDemoteAdmin(c telebot.Context) error {
	sender, exists := b.storage.GetUser(c.Sender().ID)
	if !exists || sender.Role != models.RoleAdmin {
		return c.Send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
	}

	args := strings.Split(c.Message().Text, " ")
	if len(args) != 2 {
		return c.Send("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É —Ç–∞–∫: /demote_admin @username –∏–ª–∏ /demote_admin user_id")
	}

	var targetID int64
	if strings.HasPrefix(args[1], "@") {
		username := strings.TrimPrefix(args[1], "@")
		targetID = b.storage.GetUserIDByUsername(username)
		if targetID == 0 {
			return c.Send("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º username –Ω–µ –Ω–∞–π–¥–µ–Ω.")
		}
	} else {
		var err error
		targetID, err = strconv.ParseInt(args[1], 10, 64)
		if err != nil {
			return c.Send("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
		}
	}

	targetUser, exists := b.storage.GetUser(targetID)
	if !exists {
		return c.Send("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
	}

	if targetUser.Role != models.RoleAdmin {
		return c.Send(fmt.Sprintf("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s %s –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.",
			targetUser.FirstName, targetUser.LastName))
	}

	targetUser.Role = models.RoleUser
	b.storage.UpdateUser(targetUser)
	log.Printf("–° –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %d —Å–Ω—è—Ç—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", targetUser.TelegramID)

	if err := b.storage.SaveData(); err != nil {
		log.Printf("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: %v", err)
		return c.Send("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π.")
	}

	if _, err := b.bot.Send(&telebot.User{ID: targetID}, "–° –≤–∞—Å –±—ã–ª–∏ —Å–Ω—è—Ç—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."); err != nil {
		log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é %d: %v", targetID, err)
	}

	return c.Send(fmt.Sprintf("–° –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %s %s —Å–Ω—è—Ç—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.",
		targetUser.FirstName, targetUser.LastName))
}
