// Package bot —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏ –ª–æ–≥–∏–∫—É Telegram-–±–æ—Ç–∞.
package bot

import (
	"fmt"
	"strings"
	"time"
	"yougile_bot4/internal/models"

	"gopkg.in/telebot.v3"
)

// TaskVerification –æ–ø–∏—Å—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —Å–æ–∑–¥–∞–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏
// (—Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—ë–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ Yougile).
type TaskVerification struct {
	OriginalTask    models.Task
	OriginalSender  models.User
	OriginalContent string
	HasImage        bool
	ImageData       []byte
	RetryCount      int
	CreatedAt       time.Time
}

// startTaskVerification –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–¥–∞—á–∏
func (b *Bot) startTaskVerification(task models.Task, sender models.User, content string, hasImage bool, imageData []byte) {
	verification := &TaskVerification{
		OriginalTask:    task,
		OriginalSender:  sender,
		OriginalContent: content,
		HasImage:        hasImage,
		ImageData:       imageData,
		RetryCount:      0,
		CreatedAt:       time.Now(),
	}

	// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —á–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã
	time.AfterFunc(2*time.Minute, func() {
		b.verifyTask(verification)
	})
}

// verifyTask –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏
func (b *Bot) verifyTask(v *TaskVerification) {
	// –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∑–∞–¥–∞—á—É –∏–∑ Yougile
	tasks, err := b.yougileClient.GetTasks(100) // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–¥–∞—á–∏
	if err != nil {
		b.notifyError(v, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–¥–∞—á –∏–∑ Yougile")
		return
	}

	var foundTask *models.Task
	for i := range tasks {
		if tasks[i].ID == v.OriginalTask.ID {
			foundTask = &tasks[i]
			break
		}
	}

	if foundTask == nil {
		b.handleVerificationFailure(v, "–ó–∞–¥–∞—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ Yougile")
		return
	}

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
	if !verifyTaskContent(foundTask, v) {
		b.handleVerificationFailure(v, "–ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∑–∞–¥–∞—á–∏")
		return
	}

	if v.HasImage {
		if !verifyTaskAttachments(foundTask) {
			b.handleVerificationFailure(v, "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
			return
		}
	}
}

// verifyTaskContent –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∑–∞–¥–∞—á–∏
func verifyTaskContent(task *models.Task, v *TaskVerification) bool {
	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
	if task.Title != v.OriginalTask.Title {
		return false
	}

	// –ï—Å–ª–∏ —ç—Ç–æ –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–º–µ—Ç–∫–∏
	if v.RetryCount > 0 {
		expectedMark := "–ø–æ–≤—Ç–æ—Ä–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ"
		if !strings.Contains(task.Title, expectedMark) {
			return false
		}
	}

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
	if v.OriginalContent != "" && !strings.Contains(task.Description, v.OriginalContent) {
		return false
	}

	return true
}

// verifyTaskAttachments –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –≤–ª–æ–∂–µ–Ω–∏–π –≤ –∑–∞–¥–∞—á–µ
func verifyTaskAttachments(task *models.Task) bool {
	return len(task.Attachments) > 0
}

// handleVerificationFailure –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–µ—É–¥–∞—á–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
func (b *Bot) handleVerificationFailure(v *TaskVerification, reason string) {
	if v.RetryCount == 0 {
		// –ü–µ—Ä–≤–∞—è –ø–æ–ø—ã—Ç–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É
		newTask := v.OriginalTask
		newTask.Title = fmt.Sprintf("%s (–ø–æ–≤—Ç–æ—Ä–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ)", newTask.Title)

		err := b.yougileClient.CreateTask(&newTask)
		if err != nil {
			b.notifyError(v, fmt.Sprintf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–¥–∞—á–∏: %v", err))
			return
		}

		if v.HasImage {
			// –ü–æ–≤—Ç–æ—Ä–Ω–æ –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
			attachment := &models.Attachment{
				ID:   fmt.Sprintf("retry_%d", time.Now().Unix()),
				Type: models.AttachmentTypeImage,
			}
			err = b.yougileClient.UploadAttachment(newTask.ID, attachment, v.ImageData)
			if err != nil {
				b.notifyError(v, fmt.Sprintf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: %v", err))
				return
			}
		}

		// –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
		v.RetryCount++
		v.OriginalTask = newTask
		time.AfterFunc(2*time.Minute, func() {
			b.verifyTask(v)
		})
	} else {
		// –í—Ç–æ—Ä–∞—è –ø–æ–ø—ã—Ç–∫–∞ —Ç–∞–∫–∂–µ –Ω–µ —É–¥–∞–ª–∞—Å—å
		b.notifyError(v, reason)
	}
}

// notifyError —É–≤–µ–¥–æ–º–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –æ–± –æ—à–∏–±–∫–µ
func (b *Bot) notifyError(v *TaskVerification, reason string) {
	// –£–≤–µ–¥–æ–º–ª—è–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
	errorMsg := fmt.Sprintf("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –∑–∞–¥–∞—á–∏: %s\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.", reason)
	if _, err := b.bot.Send(&telebot.User{ID: v.OriginalSender.TelegramID}, errorMsg); err != nil {
		// –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —É–≤–µ–¥–æ–º–ª—è—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
		// —á—Ç–æ–±—ã –æ–Ω–∏ –º–æ–≥–ª–∏ –ø—Ä–∏–Ω—è—Ç—å –º–µ—Ä—ã –≤—Ä—É—á–Ω—É—é.
		// –ù–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É, –ø–æ—Ç–æ–º—É —á—Ç–æ –≤—ã–∑—ã–≤–∞—é—â–∞—è –≥–æ—Ä—É—Ç–∏–Ω–∞ –æ–∂–∏–¥–∞–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è.
		// –ü—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º –ø—Ä–æ–±–ª–µ–º—É.
		// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π log –∑–¥–µ—Å—å ‚Äî –ø–∞–∫–µ—Ç bot –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç log —Ä–∞–Ω–µ–µ.
		// –î–æ–±–∞–≤–∏–º –∏–º–ø–æ—Ä—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å–≤–µ—Ä—Ö—É —Ñ–∞–π–ª–∞.
		// (–ò–º–ø–æ—Ä—Ç –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ —É–∂–µ –µ—Å—Ç—å –≤ —Ñ–∞–π–ª–µ; –µ—Å–ª–∏ –Ω–µ—Ç ‚Äî –ø–æ–ø—Ä–∞–≤–∏–º –æ—Ç–¥–µ–ª—å–Ω–æ.)
		// –ù–æ log –∏–º–ø–æ—Ä—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –¥–æ–±–∞–≤–∏–º –µ–≥–æ.
		// –î–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏: –∏—Å–ø–æ–ª—å–∑—É–µ–º fmt.Printf –∫–∞–∫ fallback.
		// –ü–æ—Å–∫–æ–ª—å–∫—É –≤ —ç—Ç–æ–º —Ñ–∞–π–ª–µ –Ω–µ—Ç –∏–º–ø–æ—Ä—Ç–∞ log, –≤—ã–ø–æ–ª–Ω—é –ø—Ä–æ—Å—Ç–æ–µ fmt.Printf.
		fmt.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é %d: %v\n", v.OriginalSender.TelegramID, err)
	}

	// –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
	adminMsg := fmt.Sprintf(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏
–ü—Ä–∏—á–∏–Ω–∞: %s

üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: %s %s
üìù –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç: %s
üìã –¢–µ–∫—Å—Ç –≤ Yougile: %s

üîÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫: %d
‚è∞ –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: %s`,
		reason,
		v.OriginalSender.FirstName,
		v.OriginalSender.LastName,
		v.OriginalContent,
		v.OriginalTask.Title,
		v.RetryCount+1,
		v.CreatedAt.Format("2006-01-02 15:04:05"))

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
	users := b.storage.GetUsers()
	for _, user := range users {
		if user.Role == models.RoleAdmin {
			if _, err := b.bot.Send(&telebot.User{ID: user.TelegramID}, adminMsg); err != nil {
				fmt.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É %d: %v\n", user.TelegramID, err)
			}
		}
	}
}
